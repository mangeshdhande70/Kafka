#spring:
#  cloud:
#    stream:
#      bindings:
#        notification-input-channel:
#          destination: pos-topic
#        notification-output-channel:
#          destination: loyalty-topic
#        hadoop-input-channel:
#          destination: pos-topic
#        hadoop-output-channel:
#          destination: hadoop-sink-topic
#      kafka:
#        streams:
#          binder:
#            brokers:  localhost:9092
#            configuration:
#                schema.registry.url: http://localhost:8081
#          bindings:
#            notification-output-channel:
#              producer:
#                valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
#            hadoop-output-channel:
#              producer:
#                valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde



spring:
  cloud:
    stream:
      bindings:
        input-channel-notification:
          destination: loyalty-topic
      kafka:
        streams:
          binder:
            application-id: notificationstream
            brokers:
            - localhost:9092
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde   
                value:
                  serde: org.springframework.kafka.support.serializer.JsonSerde